AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  adminarn:
    Type: String
    MinLength: 1
    Description: >-
      Enter arn of your quicksight admin. for exmple:
      arn:aws:quicksight:us-east-1:accountid:user/default/admin
Resources:
  qsdatasource:
    Type: 'AWS::QuickSight::DataSource'
    Properties:
      AwsAccountId:
        Ref: 'AWS::AccountId'
      DataSourceId: athena-admin-console
      Name: athena-admin-console
      Permissions:
        - Actions:
            - 'quicksight:UpdateDataSourcePermissions'
            - 'quicksight:DescribeDataSource'
            - 'quicksight:DescribeDataSourcePermissions'
            - 'quicksight:PassDataSource'
            - 'quicksight:UpdateDataSource'
            - 'quicksight:DeleteDataSource'
          Principal:
            Ref: adminarn
      SslProperties:
        DisableSsl: false
      DataSourceParameters:
        AthenaParameters:
          WorkGroup: primary
      Type: ATHENA
    DeletionPolicy: Retain
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 58b157d0-c1d9-43a2-9e91-8025139547e8
  AdminConsoleCFNMain:
    Type: 'AWS::QuickSight::DataSet'
    DependsOn:
      - qsdatasource
    DeletionPolicy: Retain
    Properties:
      AwsAccountId:
        Ref: 'AWS::AccountId'
      DataSetId: Admin-Console-CFN-Main
      ImportMode: SPICE
      LogicalTableMap:
        Admin-Console-CFN-Main-logic:
          Alias: CFN-Main
          DataTransforms:
            - CreateColumnsOperation:
                Columns:
                  - ColumnName: Earliest Login
                    ColumnId: earliest-login-admin-console
                    Expression: >-
                      parseDate(left(replace({firstlogin}, 'T', ' '),19),
                      'YYYY-MM-DD HH:mm:ss')
            - CreateColumnsOperation:
                Columns:
                  - ColumnName: Latest Login
                    ColumnId: latest-login-admin-console
                    Expression: >-
                      parseDate(left(replace({lastlogin}, 'T', ' '),19),
                      'YYYY-MM-DD HH:mm:ss')
            - ProjectOperation:
                ProjectedColumns:
                  - accountid
                  - user_name
                  - awsregion
                  - dashboard_name
                  - dashboardid
                  - event_time
                  - latest_event_time
                  - namespace
                  - group
                  - email
                  - role
                  - identity_type
                  - firstlogin
                  - lastlogin
                  - owner_viewer
                  - ownership
                  - Earliest Login
                  - Latest Login
          Source:
            PhysicalTableId: Admin-Console-CFN-Main-physical
      Name: Admin-Console-CFN-Main
      Permissions:
        - Principal:
            Ref: adminarn
          Actions:
            - 'quicksight:UpdateDataSetPermissions'
            - 'quicksight:DescribeDataSet'
            - 'quicksight:DescribeDataSetPermissions'
            - 'quicksight:PassDataSet'
            - 'quicksight:DescribeIngestion'
            - 'quicksight:ListIngestions'
            - 'quicksight:UpdateDataSet'
            - 'quicksight:DeleteDataSet'
            - 'quicksight:CreateIngestion'
            - 'quicksight:CancelIngestion'
      PhysicalTableMap:
        Admin-Console-CFN-Main-physical:
          CustomSql:
            DataSourceArn:
              'Fn::Sub': >-
                arn:aws:quicksight:${AWS::Region}:${AWS::AccountId}:datasource/athena-admin-console
            Name: CFN-Main
            SqlQuery: >-
              SELECT
                   COALESCE("d"."accountid", "l"."accountid") "accountid"
                 , COALESCE("d"."user_name", "l"."username", "g"."user") "user_name"
                 , "d"."awsregion"
                 , "d"."dashboard_name"
                 , "d"."dashboardid"
                 , "d"."event_time"
                 , "d"."latest_event_time"
                 , "g"."namespace"
                 , "g"."group"
                 , "g"."email"
                 , "g"."role"
                 , "g"."identity_type"
                 , "l"."firstlogin"
                 , "l"."lastlogin"
                 , COALESCE("do1"."principal_name", "do2"."principal_name") "owner_viewer"
                 , COALESCE("do1"."ownership", "do2"."ownership") "ownership"
                 FROM
                   (((( (SELECT
                   "useridentity"."accountid"
                 , "useridentity"."type"
                 , "split_part"("useridentity"."sessioncontext"."sessionissuer"."arn", '/', 2) "assumed_role"
                 , COALESCE("useridentity"."username", "concat"("split_part"("useridentity"."arn", '/', 2), '/', "split_part"("useridentity"."arn", '/', 3))) "user_name"
                 , "awsregion"
                 , "split_part"("split_part"("serviceeventdetails", 'dashboardName":', 2), ',', 1) "dashboard_name"
                 , "split_part"("split_part"("split_part"("split_part"("serviceeventdetails", 'dashboardId":', 2), ',', 1), 'dashboard/', 2), '"}', 1) "dashboardId"
                 , "date_parse"("eventtime", '%Y-%m-%dT%H:%i:%sZ') "event_time"
                 , "max"("date_parse"("eventtime", '%Y-%m-%dT%H:%i:%sZ')) "latest_event_time"
                 FROM
                   "admin-console"."cloudtrail_logs"
                 WHERE ((("eventsource" = 'quicksight.amazonaws.com') AND ("eventname" = 'GetDashboard')) AND ("date_trunc"('day', "date_parse"("eventtime", '%Y-%m-%dT%H:%i:%sZ')) > CAST((current_date - INTERVAL  '3' MONTH) AS date)))
                 GROUP BY 1, 2, 3, 4, 5, 6, 7, 8) d
                 FULL JOIN (
                    SELECT
                      "username"
                    , "accountid"
                    , "min"("eventtime") "firstlogin"
                    , "max"("eventtime") "lastlogin"
                    FROM
                    (SELECT
                   "eventtime"
                 , "awsregion"
                 , "sourceipaddress"
                 , "concat"("split_part"("split_part"("resources"[1]."arn", ':', 6), '/', 2), '/', "useridentity"."username") "username"
                 , "resources"[1]."accountid" "accountid"
                 FROM
                   "admin-console"."cloudtrail_logs"
                 WHERE ("eventname" = 'AssumeRoleWithSAML')
                 GROUP BY 1, 2, 3, 4, 5)  
                    GROUP BY 1, 2
                 )  l ON (("d"."user_name" = "l"."username") AND ("d"."accountid" = "l"."accountid")))
                 FULL JOIN "admin-console".group_membership g 
                 ON (
                   (("d"."accountid" = "g"."account_id") AND ("d"."user_name" = "g"."user"))
                   OR
                   (("l"."accountid" = "g"."account_id") AND ("l"."username" = "g"."user"))
                   )
                   )
                 LEFT JOIN (
                    SELECT *
                    FROM
                      (SELECT
                "account_id"
              , "aws_region"

              , "object_id"

              , "object_name"

              , "principal_type"

              , "principal_name"

              , "namespace"

              , (CASE WHEN ("strpos"("permissions", 'Delete') <> 0) THEN 'Owner'
              ELSE 'Viewer' END) "Ownership"

              FROM
                "admin-console".object_access
              WHERE ("object_type" = 'dashboard')

              GROUP BY 1, 2, 3, 4, 5, 6, 7, 8)
                    WHERE ("principal_type" = 'group')
                 )  do1 ON ((((("d"."accountid" = "do1"."account_id") AND ("d"."awsregion" = "do1"."aws_region")) AND ("d"."dashboardid" = "do1"."object_id")) AND ("do1"."principal_name" = "g"."group")) AND ("do1"."namespace" = "g"."namespace")))
                 LEFT JOIN (
                    SELECT *
                    FROM
                      (SELECT
                "account_id"
              , "aws_region"

              , "object_id"

              , "object_name"

              , "principal_type"

              , "principal_name"

              , "namespace"

              , (CASE WHEN ("strpos"("permissions", 'Delete') <> 0) THEN 'Owner'
              ELSE 'Viewer' END) "Ownership"

              FROM
                "admin-console".object_access
              WHERE ("object_type" = 'dashboard')

              GROUP BY 1, 2, 3, 4, 5, 6, 7, 8)
                    WHERE ("principal_type" = 'user')
                 )  do2 ON ((((("d"."accountid" = "do2"."account_id") AND ("d"."awsregion" = "do2"."aws_region")) AND ("d"."dashboardid" = "do2"."object_id")) AND ("do2"."principal_name" = "d"."user_name")) AND ("do2"."namespace" = "g"."namespace")))
                 GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
            Columns:
              - Name: accountid
                Type: STRING
              - Name: user_name
                Type: STRING
              - Name: awsregion
                Type: STRING
              - Name: dashboard_name
                Type: STRING
              - Name: dashboardid
                Type: STRING
              - Name: event_time
                Type: DATETIME
              - Name: latest_event_time
                Type: DATETIME
              - Name: namespace
                Type: STRING
              - Name: group
                Type: STRING
              - Name: email
                Type: STRING
              - Name: role
                Type: STRING
              - Name: identity_type
                Type: STRING
              - Name: firstlogin
                Type: STRING
              - Name: lastlogin
                Type: STRING
              - Name: owner_viewer
                Type: STRING
              - Name: ownership
                Type: STRING
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 181feb9f-e4b1-45d3-9ccd-f1d854062b61
  AdminConsoleGroupMembership:
    Type: 'AWS::QuickSight::DataSet'
    DeletionPolicy: Retain
    DependsOn:
      - qsdatasource
    Properties:
      AwsAccountId:
        Ref: 'AWS::AccountId'
      DataSetId: Admin-Console-Group-Membership
      ImportMode: SPICE
      LogicalTableMap:
        Admin-Console-Group-Membership-logic:
          Alias: group_membership
          DataTransforms:
            - ProjectOperation:
                ProjectedColumns:
                  - account_id
                  - namespace
                  - group
                  - user
                  - email
                  - role
                  - identity_type
          Source:
            PhysicalTableId: Admin-Console-Group-Membership-phisical
      Name: Admin-Console-Group-Membership
      Permissions:
        - Principal:
            Ref: adminarn
          Actions:
            - 'quicksight:UpdateDataSetPermissions'
            - 'quicksight:DescribeDataSet'
            - 'quicksight:DescribeDataSetPermissions'
            - 'quicksight:PassDataSet'
            - 'quicksight:DescribeIngestion'
            - 'quicksight:ListIngestions'
            - 'quicksight:UpdateDataSet'
            - 'quicksight:DeleteDataSet'
            - 'quicksight:CreateIngestion'
            - 'quicksight:CancelIngestion'
      PhysicalTableMap:
        Admin-Console-Group-Membership-phisical:
          CustomSql:
            DataSourceArn:
              'Fn::Sub': >-
                arn:aws:quicksight:${AWS::Region}:${AWS::AccountId}:datasource/athena-admin-console
            Name: group_membership
            SqlQuery: select * from "admin-console".group_membership
            Columns:
              - Name: account_id
                Type: STRING
              - Name: namespace
                Type: STRING
              - Name: group
                Type: STRING
              - Name: user
                Type: STRING
              - Name: email
                Type: STRING
              - Name: role
                Type: STRING
              - Name: identity_type
                Type: STRING
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3d4ff1b6-9705-41f7-8231-6ec511700320
  AdminConsoleObjectAccess:
    Type: 'AWS::QuickSight::DataSet'
    DeletionPolicy: Retain
    DependsOn:
      - qsdatasource
    Properties:
      AwsAccountId:
        Ref: 'AWS::AccountId'
      DataSetId: Admin-Console-Object-Access
      ImportMode: SPICE
      LogicalTableMap:
        Admin-Console-Object-Access-logic:
          Alias: Admin-Console-Object-Access
          DataTransforms:
            - TagColumnOperation:
                ColumnName: aws_region
                Tags:
                  - ColumnGeographicRole: STATE
            - ProjectOperation:
                ProjectedColumns:
                  - account_id
                  - aws_region
                  - object_type
                  - object_name
                  - object_id
                  - principal_type
                  - principal_name
                  - permissions
                  - namespace
                  - user_aws_account_id
                  - group
                  - user
                  - email
                  - role
                  - identity_type
          Source:
            PhysicalTableId: Admin-Console-Object-Access-phisical
      Name: Admin-Console-Object-Access
      Permissions:
        - Principal:
            Ref: adminarn
          Actions:
            - 'quicksight:UpdateDataSetPermissions'
            - 'quicksight:DescribeDataSet'
            - 'quicksight:DescribeDataSetPermissions'
            - 'quicksight:PassDataSet'
            - 'quicksight:DescribeIngestion'
            - 'quicksight:ListIngestions'
            - 'quicksight:UpdateDataSet'
            - 'quicksight:DeleteDataSet'
            - 'quicksight:CreateIngestion'
            - 'quicksight:CancelIngestion'
      PhysicalTableMap:
        Admin-Console-Object-Access-phisical:
          CustomSql:
            DataSourceArn:
              'Fn::Sub': >-
                arn:aws:quicksight:${AWS::Region}:${AWS::AccountId}:datasource/athena-admin-console
            Name: Admin-Console-Object-Access
            SqlQuery: >-
              select o.account_id, o.aws_region, o.object_type, o.object_name,
              o.object_id, o.principal_type, o.principal_name,

              o.permissions, g.namespace, g.account_id as user_aws_account_id,

              g."group", g."user", g.email, g."role", g.identity_type from
              "admin-console".object_access as o 

              full outer join

              "admin-console".group_membership as g

              on o.account_id=g.account_id AND o.principal_name=g."group" AND
              o.namespace=g.namespace

              where o.principal_type in ('group')

              union all

              select o.account_id, o.aws_region, o.object_type, o.object_name,
              o.object_id, o.principal_type, o.principal_name,

              o.permissions, g.namespace, g.account_id as user_aws_account_id,

              g."group", g."user", g.email, g."role", g.identity_type

              from "admin-console".object_access o

              full outer join

              "admin-console".group_membership g

              on o.account_id=g.account_id AND o.principal_name=g.user AND
              o.namespace=g.namespace

              where o.principal_type in ('user')
            Columns:
              - Name: account_id
                Type: STRING
              - Name: aws_region
                Type: STRING
              - Name: object_type
                Type: STRING
              - Name: object_name
                Type: STRING
              - Name: object_id
                Type: STRING
              - Name: principal_type
                Type: STRING
              - Name: principal_name
                Type: STRING
              - Name: permissions
                Type: STRING
              - Name: namespace
                Type: STRING
              - Name: user_aws_account_id
                Type: STRING
              - Name: group
                Type: STRING
              - Name: user
                Type: STRING
              - Name: email
                Type: STRING
              - Name: role
                Type: STRING
              - Name: identity_type
                Type: STRING

  adminconsoledashboard:
    Type: 'AWS::QuickSight::Dashboard'
    DependsOn:
      - qsdatasource
      - AdminConsoleGroupMembership
      - AdminConsoleCFNMain
      - AdminConsoleObjectAccess
    DeletionPolicy: Retain
    Properties:
      AwsAccountId:
        Ref: 'AWS::AccountId'
      DashboardId:
        'Fn::Join':
          - ''
          - - admin-console
            - Ref: 'AWS::AccountId'
      DashboardPublishOptions:
        AdHocFilteringOption:
          AvailabilityStatus: DISABLED
        ExportToCSVOption:
          AvailabilityStatus: ENABLED
      Name: admin-console-dashboard
      Permissions:
        - Actions:
            - 'quicksight:DescribeDashboard'
            - 'quicksight:ListDashboardVersions'
            - 'quicksight:UpdateDashboardPermissions'
            - 'quicksight:QueryDashboard'
            - 'quicksight:UpdateDashboard'
            - 'quicksight:DeleteDashboard'
            - 'quicksight:DescribeDashboardPermissions'
            - 'quicksight:UpdateDashboardPublishedVersion'
          Principal:
            Ref: adminarn
      SourceEntity:
        SourceTemplate:
          Arn: 'arn:aws:quicksight:us-east-1:889399602426:template/admin-console-cfn'
          DataSetReferences:
            - DataSetArn:
                'Fn::Sub': >-
                  arn:aws:quicksight:${AWS::Region}:${AWS::AccountId}:dataset/Admin-Console-Group-Membership
              DataSetPlaceholder: Admin-Console-Group-Membership
            - DataSetArn:
                'Fn::Sub': >-
                  arn:aws:quicksight:${AWS::Region}:${AWS::AccountId}:dataset/Admin-Console-CFN-Main
              DataSetPlaceholder: Admin-Console-CFN-Main
            - DataSetArn:
                'Fn::Sub': >-
                  arn:aws:quicksight:${AWS::Region}:${AWS::AccountId}:dataset/Admin-Console-Object-Access
              DataSetPlaceholder: Admin-Console-Object-Access
      ThemeArn:
        'Fn::Sub': >-
          arn:aws:quicksight:${AWS::Region}:${AWS::AccountId}:theme/10223da0-343d-4c06-a813-6509eb571043

